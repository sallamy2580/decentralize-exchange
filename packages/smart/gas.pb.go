// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: gas.proto

package smart

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type PaymentType int32

const (
	PaymentType_INVALID          PaymentType = 0
	PaymentType_ContractCaller   PaymentType = 1
	PaymentType_ContractBinder   PaymentType = 2
	PaymentType_EcosystemAddress PaymentType = 3
)

var PaymentType_name = map[int32]string{
	0: "INVALID",
	1: "ContractCaller",
	2: "ContractBinder",
	3: "EcosystemAddress",
}

var PaymentType_value = map[string]int32{
	"INVALID":          0,
	"ContractCaller":   1,
	"ContractBinder":   2,
	"EcosystemAddress": 3,
}

func (x PaymentType) String() string {
	return proto.EnumName(PaymentType_name, int32(x))
}

func (PaymentType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_df176b4a803aa869, []int{0}
}

type DirectType int32

const (
	DirectType_invalid  DirectType = 0
	DirectType_direct   DirectType = 1
	DirectType_indirect DirectType = 2
)

var DirectType_name = map[int32]string{
	0: "invalid",
	1: "direct",
	2: "indirect",
}

var DirectType_value = map[string]int32{
	"invalid":  0,
	"direct":   1,
	"indirect": 2,
}

func (x DirectType) String() string {
	return proto.EnumName(DirectType_name, int32(x))
}

func (DirectType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_df176b4a803aa869, []int{1}
}

func init() {
	proto.RegisterEnum("smart.PaymentType", PaymentType_name, PaymentType_value)
	proto.RegisterEnum("smart.DirectType", DirectType_name, DirectType_value)
}

func init() { proto.RegisterFile("gas.proto", fileDescriptor_df176b4a803aa869) }

var fileDescriptor_df176b4a803aa869 = []byte{
	// 230 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0xcf, 0x41, 0x4a, 0xc4, 0x30,
	0x18, 0x05, 0xe0, 0x64, 0xc4, 0x51, 0xff, 0x11, 0x09, 0xc1, 0x75, 0xf6, 0x0e, 0xcc, 0x74, 0x31,
	0x27, 0x68, 0x3b, 0x2e, 0x0a, 0x22, 0x2e, 0x44, 0x06, 0x77, 0x7f, 0x93, 0x50, 0x83, 0x4d, 0x52,
	0x92, 0x28, 0xf6, 0x16, 0x1e, 0xcb, 0x65, 0x97, 0x2e, 0xa5, 0xbd, 0x88, 0x50, 0x44, 0x66, 0xf9,
	0xde, 0x83, 0x07, 0x1f, 0x5c, 0x34, 0x18, 0xb7, 0x5d, 0xf0, 0xc9, 0xf3, 0xd3, 0x68, 0x31, 0xa4,
	0xf5, 0x01, 0x56, 0x0f, 0xd8, 0x5b, 0xed, 0xd2, 0x63, 0xdf, 0x69, 0xbe, 0x82, 0xb3, 0xea, 0xfe,
	0x29, 0xbf, 0xab, 0xf6, 0x8c, 0x70, 0x0e, 0x57, 0xa5, 0x77, 0x29, 0xa0, 0x4c, 0x25, 0xb6, 0xad,
	0x0e, 0x8c, 0x1e, 0x77, 0x85, 0x71, 0x4a, 0x07, 0xb6, 0xe0, 0xd7, 0xc0, 0x6e, 0xa5, 0x8f, 0x7d,
	0x4c, 0xda, 0xe6, 0x4a, 0x05, 0x1d, 0x23, 0x3b, 0x59, 0xef, 0x00, 0xf6, 0x26, 0x68, 0xf9, 0x7f,
	0x6c, 0xdc, 0x3b, 0xb6, 0x46, 0x31, 0xc2, 0x01, 0x96, 0x6a, 0x9e, 0x18, 0xe5, 0x97, 0x70, 0x6e,
	0xdc, 0x5f, 0x5a, 0x14, 0xe5, 0xd7, 0x28, 0xe8, 0x30, 0x0a, 0xfa, 0x33, 0x0a, 0xfa, 0x39, 0x09,
	0x32, 0x4c, 0x82, 0x7c, 0x4f, 0x82, 0x3c, 0xdf, 0x34, 0x26, 0xbd, 0xbc, 0xd5, 0x5b, 0xe9, 0x6d,
	0x56, 0x15, 0xf9, 0x61, 0x63, 0x7c, 0xd6, 0xf8, 0x8d, 0xa9, 0xf1, 0x23, 0xeb, 0x50, 0xbe, 0x62,
	0xa3, 0x63, 0x36, 0x9b, 0xea, 0xe5, 0x2c, 0xdc, 0xfd, 0x06, 0x00, 0x00, 0xff, 0xff, 0xbf, 0x39,
	0x01, 0xb9, 0xee, 0x00, 0x00, 0x00,
}
