// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: vm.proto

package script

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// VMType is virtual machine type
type VMType int32

const (
	// VMType_INVALID is invalid type
	VMType_INVALID VMType = 0
	// VMType_Smart is smart vm type
	VMType_Smart VMType = 1
	// VMType_CLB is clb vm type
	VMType_CLB VMType = 2
	// VMType_CLBMaster is CLBMaster type
	VMType_CLBMaster VMType = 3
)

var VMType_name = map[int32]string{
	0: "INVALID",
	1: "Smart",
	2: "CLB",
	3: "CLBMaster",
}

var VMType_value = map[string]int32{
	"INVALID":   0,
	"Smart":     1,
	"CLB":       2,
	"CLBMaster": 3,
}

func (x VMType) String() string {
	return proto.EnumName(VMType_name, int32(x))
}

func (VMType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cab246c8c7c5372d, []int{0}
}

// ObjectType Types of the compiled objects
type ObjectType int32

const (
	// ObjUnknown is an unknown object.
	ObjectType_Unknown ObjectType = 0
	// ObjectType_Contract is a contract object.
	ObjectType_Contract ObjectType = 1
	// ObjectType_Func is a function object. myfunc()
	ObjectType_Func ObjectType = 2
	// ObjectType_ExtFunc is an extended build in function object. $myfunc()
	ObjectType_ExtFunc ObjectType = 3
	// ObjectType_Var is a variable. myvar
	ObjectType_Var ObjectType = 4
	// ObjectType_Extend is an extended variable. $myvar
	ObjectType_Extend ObjectType = 5
)

var ObjectType_name = map[int32]string{
	0: "Unknown",
	1: "Contract",
	2: "Func",
	3: "ExtFunc",
	4: "Var",
	5: "Extend",
}

var ObjectType_value = map[string]int32{
	"Unknown":  0,
	"Contract": 1,
	"Func":     2,
	"ExtFunc":  3,
	"Var":      4,
	"Extend":   5,
}

func (x ObjectType) String() string {
	return proto.EnumName(ObjectType_name, int32(x))
}

func (ObjectType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cab246c8c7c5372d, []int{1}
}

func init() {
	proto.RegisterEnum("script.VMType", VMType_name, VMType_value)
	proto.RegisterEnum("script.ObjectType", ObjectType_name, ObjectType_value)
}

func init() { proto.RegisterFile("vm.proto", fileDescriptor_cab246c8c7c5372d) }

var fileDescriptor_cab246c8c7c5372d = []byte{
	// 242 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x8f, 0x41, 0x4e, 0x83, 0x40,
	0x18, 0x46, 0x87, 0xd2, 0x52, 0xfa, 0xab, 0xc9, 0x64, 0x0e, 0x30, 0x07, 0x20, 0x69, 0x59, 0xb8,
	0x71, 0x5b, 0x68, 0x4d, 0x48, 0xa8, 0x2e, 0xaa, 0xc4, 0xb8, 0x1b, 0xc6, 0x09, 0x62, 0xc3, 0x0c,
	0x19, 0xfe, 0x2a, 0xde, 0xc2, 0x63, 0xb9, 0xec, 0xd2, 0xa5, 0x81, 0x8b, 0x18, 0x30, 0x5d, 0x7e,
	0xc9, 0xf7, 0x5e, 0xf2, 0xc0, 0x7f, 0xaf, 0x56, 0xb5, 0x35, 0x68, 0x98, 0xd7, 0x48, 0x5b, 0xd6,
	0x18, 0xdc, 0x80, 0x97, 0xed, 0x1e, 0x3e, 0x6b, 0xc5, 0x2e, 0x60, 0x9e, 0xdc, 0x65, 0xeb, 0x34,
	0xd9, 0x50, 0xc2, 0x16, 0x30, 0xdb, 0x57, 0xc2, 0x22, 0x75, 0xd8, 0x1c, 0xdc, 0x38, 0x8d, 0xe8,
	0x84, 0x5d, 0xc1, 0x22, 0x4e, 0xa3, 0x9d, 0x68, 0x50, 0x59, 0xea, 0x06, 0x7b, 0x80, 0xfb, 0xfc,
	0x4d, 0x49, 0x3c, 0xd3, 0x8f, 0xfa, 0xa0, 0xcd, 0x87, 0xa6, 0x84, 0x5d, 0x82, 0x1f, 0x1b, 0x8d,
	0x56, 0xc8, 0x41, 0xe0, 0xc3, 0xf4, 0xf6, 0xa8, 0x25, 0x9d, 0x0c, 0xa7, 0x6d, 0x8b, 0xe3, 0x70,
	0x07, 0x6f, 0x26, 0x2c, 0x9d, 0x32, 0x00, 0x6f, 0xdb, 0xa2, 0xd2, 0x2f, 0x74, 0x16, 0x6d, 0xbe,
	0x3b, 0xee, 0x9c, 0x3a, 0xee, 0xfc, 0x76, 0xdc, 0xf9, 0xea, 0x39, 0x39, 0xf5, 0x9c, 0xfc, 0xf4,
	0x9c, 0x3c, 0x07, 0x45, 0x89, 0xaf, 0xc7, 0x7c, 0x25, 0x4d, 0x15, 0x26, 0xd1, 0xfa, 0x69, 0x59,
	0x9a, 0xb0, 0x30, 0xcb, 0x32, 0x17, 0x6d, 0x58, 0x0b, 0x79, 0x10, 0x85, 0x6a, 0xc2, 0xff, 0xa8,
	0xdc, 0x1b, 0x1b, 0xaf, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x48, 0xed, 0xa9, 0x8c, 0xef, 0x00,
	0x00, 0x00,
}
